{
  "openapi": "3.0.3",
  "info": {
    "title": "Fly Delivery",
    "description": "This application offers a seamless and convenient way to satisfy your cravings with just a few clicks. Fly-Delivery connects you with a wide range of restaurants and cuisines, bringing delicious meals straight to your doorstep."
  },
  "servers": [
    {
      "url": "http://localhost:4444/"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authorization Users"
    },
    {
      "name": "users",
      "description": "Users Operations"
    },
    {
      "name": "articles",
      "description": "Articles Operations"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "description": "Login user",
        "operationId": "LoginUser",
        "requestBody": {
          "description": "Login user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request!"
          },
          "401": {
            "description": "Unauthorized!"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        },
        "required": true
      }
    },
    "/auth/requestResetPassword": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Request reset password user",
        "description": "send request to reset password",
        "operationId": "requestPassword",
        "requestBody": {
          "description": "Request reset password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Please check your email for reset your password!"
          },
          "404": {
            "description": "Not Found!"
          },
          "444": {
            "description": "No Response!"
          }
        }
      }
    },
    "/auth/resetPassword": {
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Reset user Password",
        "description": "Reset user Password",
        "operationId": "ResetUserPassword",
        "requestBody": {
          "description": "Reset user Password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "110eb998dfcbe64e756ac4c4"
                  },
                  "token": {
                    "type": "string",
                    "example": "string"
                  },
                  "password": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Your password has been changed successfully"
          },
          "400": {
            "description": "You have entered an actual password. Please enter a new password or log in again using the same password."
          },
          "401": {
            "description": "Invalid token!"
          },
          "404": {
            "description": "Request user not exist!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register new user",
        "description": "Register new user",
        "operationId": "regsterNewUser",
        "requestBody": {
          "description": "Register new user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "exemple"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "exemple@email.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "*******"
                  },
                  "role": {
                    "type": "string",
                    "example": "Customer"
                  },
                  "phone": {
                    "type": "string",
                    "example": "00 000 000"
                  },
                  "adress": {
                    "type": "string",
                    "example": "example"
                  },
                  "avatar": {
                    "type": "string",
                    "example": "example"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request! Email already exist!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get the list of all users",
        "description": "Get the list of all users",
        "operationId": "ListUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "required": true,
            "type": "string"
          },
          {
            "name": "createdAtBefore",
            "in": "query",
            "description": "Filter users created before this date (YYYY-MM-DD format)",
            "required": true,
            "type": "string"
          },
          {
            "name": "createdAtAfter",
            "in": "query",
            "description": "Filter users created after this date (YYYY-MM-DD format)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "succussffully operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": 1
                    },
                    "users": {
                      "type": "array",
                      "example": [
                        {
                          "_id": "string",
                          "name": "string",
                          "email": "exemple@email.com",
                          "phone": "00 000 000",
                          "role": "customer",
                          "avatar": "string",
                          "statusAccount": true,
                          "adress": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/validationAccountClient": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Validation account client",
        "description": "Validation account client.",
        "operationId": "ValidationAccountClinet",
        "requestBody": {
          "description": "Validated your account.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Your account is verify now"
          },
          "400": {
            "description": "Validation code is wrong!"
          },
          "404": {
            "description": "User not found !"
          },
          "409": {
            "description": "Your account is already validated!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/confirmAccount/{id}": {
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Confirm account Restaurant & Deliveryman",
        "description": "Confirm account Restaurant & Deliveryman.",
        "operationId": "confirmAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation Account Confirmed"
          },
          "401": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Access denied!"
          },
          "404": {
            "description": "User not found !"
          },
          "409": {
            "description": "Bad request! Your account is already verified!"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      }
    },
    "/users/request": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get the list of all users unvalidated",
        "description": "Get the list of all users unvalidated.",
        "operationId": "listUsersUnvalidated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "succussffully operation ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": 1
                    },
                    "users": {
                      "type": "array",
                      "example": [
                        {
                          "_id": "string",
                          "name": "string",
                          "email": "exemple@email.com",
                          "phone": "00 000 000",
                          "role": "customer",
                          "avatar": "string",
                          "statusAccount": false,
                          "adress": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Succussffully operation"
          },
          "204": {
            "description": "There are no unvalidated users!"
          },
          "404": {
            "description": "Users not found!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Display user profile",
        "description": "Display user profile",
        "operationId": "DisplayUserProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      }
    },
    "/users/password/change": {
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Change user password",
        "description": "Change user password",
        "operationId": "changeUserPassword",
        "requestBody": {
          "description": "Change user password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actualPassword": {
                    "type": "string",
                    "example": "actualPassword"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "newPassword"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "newPassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been changed"
          },
          "400": {
            "description": "Bad request! Current password is not correct!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not exist !"
          },
          "406": {
            "description": "Password is not confirm!"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      }
    },
    "/article": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Add new article",
        "description": "Add new article",
        "operationId": "AddArticle",
        "requestBody": {
          "description": "Add new article",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pizza"
                  },
                  "picture": {
                    "type": "string",
                    "example": "pizzapicture"
                  },
                  "price": {
                    "type": "integer",
                    "example": 40
                  },
                  "rating": {
                    "type": "integer",
                    "default": 0
                  },
                  "reviews": {
                    "type": "integer",
                    "default": 0
                  },
                  "information": {
                    "type": "string",
                    "example": "Sauce + mozarella + frites "
                  },
                  "discount": {
                    "type": "integer",
                    "example": 40
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "404": {
            "description": "Bad request!"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      },
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Get the list of all articles",
        "description": "Get the list of all articles",
        "operationId": "ListAllArticles",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "required": true,
            "type": "string"
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter articles with price greater or equal",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter articles with price less or equal",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succussffully operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalArticles": {
                      "type": "integer",
                      "example": 1
                    },
                    "articles": {
                      "type": "array",
                      "example": [
                        {
                          "_id": "665a072f9cb36aa8375e3c01",
                          "restaurantId": "66429b84caaf6f4270b0254b",
                          "name": "Pizza Napolitaine",
                          "picture": "pizzapicture",
                          "price": 40,
                          "rating": 0,
                          "reviews": 0,
                          "discount": 10,
                          "information": "Sauce + mozarella"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid price range!"
          },
          "404": {
            "description": "There are no article!"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Delete all articles created by the same restaurant",
        "description": "Delete all articles created by the same restaurant",
        "operationId": "DeleteAllArticles",
        "responses": {
          "200": {
            "description": "Your articles are deleted"
          },
          "400": {
            "description": "Bad request!"
          },
          "404": {
            "description": "You have no articles"
          }
        }
      }
    },
    "/article/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Get an article whose identifier is known",
        "description": "Get an article whose identifier is known",
        "operationId": "GetArticle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "404": {
            "description": "Article not found !"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Update article whose identifier is known",
        "description": "Update article whose identifier is known",
        "operationId": "UpdateArticle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The article that needs to updated",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Article with new properties",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "restaurantId": {
                    "type": "string",
                    "example": "66063369f5a2397ad3b4fa5d"
                  },
                  "name": {
                    "type": "string",
                    "example": "Pizza"
                  },
                  "picture": {
                    "type": "string",
                    "example": "picture of this article"
                  },
                  "price": {
                    "type": "integer",
                    "example": 20
                  },
                  "rating": {
                    "type": "integer",
                    "example": 1
                  },
                  "reviews": {
                    "type": "integer",
                    "example": 10
                  },
                  "discount": {
                    "type": "integer",
                    "example": 30
                  },
                  "information": {
                    "type": "string",
                    "example": "all information about this article"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article updated ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "restaurantId": {
                      "type": "string",
                      "example": "66063369f5a2397ad3b4fa5d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Pizza"
                    },
                    "picture": {
                      "type": "string",
                      "example": "picture of this article"
                    },
                    "price": {
                      "type": "integer",
                      "example": 20
                    },
                    "rating": {
                      "type": "integer",
                      "example": 1
                    },
                    "reviews": {
                      "type": "integer",
                      "example": 10
                    },
                    "discount": {
                      "type": "integer",
                      "example": 30
                    },
                    "information": {
                      "type": "string",
                      "example": "all information about this article"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Delete article whose identifier is known",
        "description": "Delete article whose identifier is known",
        "operationId": "deleteArticle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The article that needs to be deleted",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Article is succussffully deleted"
          },
          "400": {
            "description": "Bad request!"
          },
          "401": {
            "description": "Unauthorized! Invalid token"
          },
          "404": {
            "description": "Article not found!"
          }
        }
      }
    },
    "/article/restaurant/myarticles": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "articles"
        ],
        "summary": "Get all article created by the same restaurant",
        "description": "Get all article created by the same restaurant",
        "operationId": "GetArticleByRestaurant",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Succussffully operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalArticles": {
                      "type": "integer",
                      "example": 1
                    },
                    "articles": {
                      "type": "array",
                      "example": [
                        {
                          "_id": "665a072f9cb36aa8375e3c01",
                          "restaurantId": "66429b84caaf6f4270b0254b",
                          "name": "Pizza Napolitaine",
                          "picture": "pizzapicture",
                          "price": 40,
                          "rating": 0,
                          "reviews": 0,
                          "discount": 10,
                          "information": "Sauce + mozarella"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "You have no article yet"
          },
          "500": {
            "description": "Internal Server Error!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "name",
          "email",
          "password",
          "role",
          "phone",
          "adress",
          "avatar",
          "statusAccount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "exemple"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "exemple@email.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "*******"
          },
          "role": {
            "type": "string",
            "example": "Customer",
            "enum": [
              "Restaurant",
              "Deliveryman",
              "Customer"
            ]
          },
          "phone": {
            "type": "integer",
            "example": 12345678
          },
          "adress": {
            "type": "string",
            "example": "example"
          },
          "avatar": {
            "type": "string",
            "example": "example"
          }
        }
      },
      "Article": {
        "required": [
          "restaurantId",
          "name",
          "price",
          "information"
        ],
        "type": "object",
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "66063369f5a2397ad3b4fa5d"
          },
          "name": {
            "type": "string",
            "example": "Pizza"
          },
          "picture": {
            "type": "string",
            "example": "picture of this article"
          },
          "price": {
            "type": "integer",
            "example": 20
          },
          "rating": {
            "type": "integer",
            "example": 1
          },
          "reviews": {
            "type": "integer",
            "example": 10
          },
          "discount": {
            "type": "integer",
            "example": 30
          },
          "information": {
            "type": "string",
            "example": "all information about this article"
          }
        }
      }
    },
    "requestBodies": {
      "User": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "Article": {
        "description": "List of articles object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    }
  }
}